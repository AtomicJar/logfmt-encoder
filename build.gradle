plugins {
	id 'java-library'
	id 'maven-publish'
}

repositories {
	mavenCentral()
}

group = 'com.atomicjar'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

java {
	withJavadocJar()
	withSourcesJar()
}

dependencies {
	implementation 'org.apache.commons:commons-text:1.9'

	api 'ch.qos.logback:logback-classic:1.2.10'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
	testImplementation 'org.assertj:assertj-core:3.24.2'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

publishing {
	repositories {
		maven {
			url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2")
			credentials {
				username = System.getenv("OSSRH_USERNAME")
				password = System.getenv("OSSRH_PASSWORD")
			}
		}
	}
	publications {
		maven(MavenPublication) {
			from(components.java)

			pom {
				name = 'logfmt-encoder'
				description = 'A logfmt encoder for Java'
				url = 'https://github.com/AtomicJar/logfmt-encoder/'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'bsideup'
						name = 'Sergei Egorov'
						email = 'sergei@atomicjar.com'
					}
					developer {
						id = 'kiview'
						name = 'Kevin Wittek'
						email = 'kevin@atomicjar.com'
					}
					developer {
						id = 'lanwen'
						name = 'Kirill Merkushev'
						email = 'kirill@atomicjar.com'
					}
					developer {
						id = 'clive-jevons'
						name = 'Clive Jevons'
						email = 'clive@atomicjar.com'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/AtomicJar/logfmt-encoder.git'
					developerConnection = 'scm:git:ssh://github.com/AtomicJar/logfmt-encoder.git'
					url = 'https://github.com/AtomicJar/logfmt-encoder/'
				}
			}
		}
	}
}

if (hasProperty('buildScan')) {
	buildScan {
		termsOfServiceUrl = 'https://gradle.com/terms-of-service'
		termsOfServiceAgree = 'yes'
	}
}
